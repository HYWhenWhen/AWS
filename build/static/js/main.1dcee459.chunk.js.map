{"version":3,"sources":["Styles/Images/Logo.svg","Component/Header.js","Component/Button.js","Styles/Images/Main.svg","Routes/Main.js","Hooks/useInput.js","Routes/Form.js","Component/SubmitCalendar.js","Routes/Submit.js","Styles/Images/SubmitResult.svg","Routes/SubmitResult.js","Styles/Images/Clip.svg","Styles/Images/MypageModal.svg","Routes/MypageSchedule.js","Component/MypageCalendar.js","Routes/MyPage.js","Styles/Images/FormResult.svg","Routes/FormResult.js","Styles/Images/Auth.svg","Styles/Images/kakao.svg","Routes/Auth.js","Styles/Images/resultPreview.svg","Routes/ResultPopup.js","Component/ResultCalendar.js","Routes/ResultPage.js","Component/Router.js","Component/GlobalStyles.js","App.js","index.js"],"names":["Container","styled","div","Logo","a","LogoImg","img","List","AuthBtn","Link","isLogin","localStorage","getItem","console","log","href","src","WWLogo","undefined","onClick","window","location","replace","toast","removeItem","Btn","button","props","backgroundColor","marginRight","marginBottom","width","fontSize","Button","content","Main","Content","Text","defaultValue","useState","value","setValue","onChange","e","target","Buttons","Name","input","PeopleNum","PeopleTxt","NumController","PM","Num","startDate","Date","endDate","key","color","state","setState","name","useInput","num","setNum","placeholder","icon","faUser","alert","editableDateInputs","item","selection","moveRangeOnFirstSelection","ranges","locale","ko","months","direction","Start","moment","End","axios","post","scheduleName","expectedMemberCnt","hostIdToken","format","then","response","data","success","scheduleKey","catch","error","make","Controller","Month","span","WeekDayRow","WeekDay","CalendarContainer","table","Days","tbody","Week","tr","DayContainer","td","Day","checkDays","setCheckDays","start","end","cnt","duration","diff","asDays","loading","setLoading","check_tmp","useEffect","i","tmpDay","clone","add","localDate","availability","getMoment","setMoment","today","firstWeek","startOf","week","lastWeek","endOf","days_row","map","day","handleClick","days","tmp","idx","subtract","result","concat","Array","fill","index","isBetween","isSame","style","borderBottom","calendarArr","InfoContainer","Title","Info","MyDays","Btns","Test","Des","TestDay","Submit","match","setStartDate","setEndDate","formName","setFormName","testClick","setTestClick","params","id","idToken","SubmitCalendar","dates","Img","SubmitResult","Top","ClipImg","BluePart","AddContainer","ScheduleInput","Add","Schedules","Schedule","ScheduleText","Delete","scheduleText","scheduleList","setScheduleList","GetSchedule","myScheduleList","Clip","height","schedule","myScheduleID","myScheduleName","DeleteSchedule","Point","contentStyle","padding","X","checkDay","setCheckDay","trigger","includes","modal","lockScroll","close","MypageSchedule","Center","CalendarTop","Bottom","Forms","Flist","LeftBtn","RightBtn","Form","Line","MyPage","setDates","myForms","setMyForms","myidx","setMyidx","schedules","MypageCalendar","autoClose","slice","myform","url","to","Math","ceil","length","setCopy","FormResult","text","display","onCopy","Login","Txt","Klogo","KaKaoBtn","KaKaoLogin","GoogleBtn","GoogleLogin","Auth","clientId","onSuccess","res","profileObj","googleId","nickName","Ts","Me","setItem","onFailure","cookiePolicy","buttonText","token","profile","getProfile","kakao","DateRange","All","Possible","Adjust","Impossible","Left","Allpeople","Right","Node","L","R","date","submitStatus","setAvailability","avail","availabilityToLong","adj","possibleCnt","adjustableCnt","ResultPopup","PeopleContainer","PeopleImg","setExpectedMemberCnt","joinedMemberCnt","setJoinedMemberCnt","getDateFormat","resultPreview","ResultCalendar","Wrapper","Contents","Header","exact","path","component","ResultPage","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcee459.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.810a1ecb.svg\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport WWLogo from \"../Styles/Images/Logo.svg\";\n\nimport { toast } from \"react-toastify\";\n\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:space-between;\n    padding: 15px 30px;\n`;\n\nconst Logo = styled.a`\n    display:flex;\n    font-size:1.2rem;\n    font-weight:bold;\n`;\n\nconst LogoImg= styled.img`\n    padding-bottom: 3px;\n    width: 9rem;\n`;\n\nconst List = styled.div`\n    display:flex;\n`;\n\nconst AuthBtn = styled.div`\n    cursor:pointer;\n    background-color: #000070;\n    color:white;\n    border-radius: 2rem;\n    padding: 0 2rem;\n    line-height: 2rem;\n`;\n\nconst Link = styled.a`\n    cursor:pointer;\n    border: 2px solid #000070;\n    box-sizing: border-box;\n    color:#000070;\n    border-radius: 2rem;\n    padding:0 2rem;\n    margin-right: 1rem;\n    line-height: 2rem;\n`;\n\nexport default () => {\n    const isLogin =localStorage.getItem('login')\n    console.log(isLogin);\n    const logout=()=>{\n        toast(\"로그아웃 되었습니다\")\n        localStorage.removeItem('login');\n        window.location.replace(\"/\")\n    }\n\n    return (\n        <Container>\n            <Logo href =\"/\" >\n                <LogoImg src = {WWLogo}/>\n            </Logo>\n            {\n                (isLogin == undefined || isLogin == null) ? (\n                    <List>\n                    <AuthBtn onClick={()=>{window.location.replace(\"/#/auth\")}}>LOGIN</AuthBtn>\n                    </List>\n                ) : (\n                    <List>\n                        <Link href=\"/#/myPage\">MYPAGE</Link>\n                        <AuthBtn onClick={()=>{logout()}}>LOGOUT</AuthBtn>\n                    </List>\n                )\n            }\n\n        </Container>\n    );\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Btn = styled.button`\n    background-color: ${props => props.backgroundColor};\n    margin-right: ${props => props.marginRight};\n    margin-bottom: ${props => props.marginBottom};\n    width: ${props => props.width || \"9rem\"};  // 디폴트 값이 9rem\n    font-size: ${props => props.fontSize || \"1rem\"};;\n    padding: 13px 8px;\n    color: white;\n    border-radius: 3rem;\n    box-shadow: 1px 2px 5px #bfbfbf;\n    cursor: pointer;\n    border:none;\n    font-family: 'Noto Sans CJK KR';\n`;\n\n/*\n    content - 들어가는 내용 (버튼에 나오는 글씨 ex- 취소)\n    background color, width, marginright - css 관련 옵션들. (background color는 꼭 넣어줘야됨.)\n    onclick - 버튼 클릭시 작동되는 함수.\n    입력 타입은 하단 props 참고.\n*/\nconst Button = ({onClick, content, backgroundColor, width, marginRight, fontSize, marginBottom }) => (\n    <Btn onClick={onClick} backgroundColor={backgroundColor} width={width} marginRight={marginRight} fontSize={fontSize} marginBottom={marginBottom}>\n        {content}\n    </Btn>\n);\n\nButton.propTypes = {\n    onClick : PropTypes.func,\n    backgroundColor :PropTypes.string.isRequired,\n    width :PropTypes.string,\n    marginRight :PropTypes.string,\n    fontSize: PropTypes.string,\n    marginBottom : PropTypes.string,\n};\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/Main.b2e62f51.svg\";","import React from 'react';\nimport { toast } from 'react-toastify';\n\nimport styled from \"styled-components\";\nimport Button from '../Component/Button';\n\nimport Main from \"../Styles/Images/Main.svg\";\n\n\nconst Container = styled.div`\n    width: 100%;\n    height: 56rem;\n    padding:0 20%;\n    box-sizing: border-box;\n    background-image : url(${Main});\n    background-size: 103rem;\n    background-position: 22rem -4rem;\n    background-repeat: no-repeat;\n\n`;\n\nconst Content = styled.div`\npadding-top: 21%;\n`;\n\n\nconst Text = styled.div`\n    padding-bottom: 2rem;\n    cursor: default;\n    font-size: 2.5rem;\n    color: #000070;\n    line-height: 3.5rem;\n`;\n\nconst Image = styled.img`\n    height:33rem;\n`;\n\nconst Check =()=>{\n}\n\n\nexport default ({})=>{\n    const isLogin =localStorage.getItem('login')\n    console.log(isLogin)\n\n    return (\n        <Container>\n            <Content>\n            <Text> 지인들과<br/>일정을 <br/>잡으세요</Text>\n\n            <Button onClick={()=>{isLogin?(window.location.replace(\"/#/form\")):(toast(\"로그인이 필요합니다\"))}} content=\"일정맞추기\" backgroundColor=\"#000070\"/>\n            </Content>\n        </Container>\n    )\n}\n","import { useState } from \"react\";\n\nexport default defaultValue => {\n    const [value, setValue] = useState(defaultValue);\n\n    const onChange = e => {\n        const {\n            target: { value }\n        } = e;\n        setValue(value);\n    };\n\n    return { value, onChange, setValue };\n};","import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport { ko } from 'react-date-range/dist/locale';\n\nimport { DateRange } from 'react-date-range';\nimport '../Styles/Form.css'\nimport useInput from '../Hooks/useInput';\nimport Button from '../Component/Button';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\n\nimport moment from 'moment';\n\n\nconst Container = styled.div`\n    width: 100%;\n    box-sizing: border-box;\n    padding: 4rem 20%;\n`;\n\nconst Buttons = styled.div`\n    display:flex;\n    justify-content:center;\n    margin-top: 5rem;\n    text-align: center;\n    color:white;\n`;\n\nconst Name = styled.input`\n    width: 60%;\n    margin: 0 20% 20px;\n    font-size: 1.3rem;\n    border: none;\n    border-bottom: 2px solid #E2E2E2;\n    font-family: 'Noto Sans CJK KR';\n    text-align: center;\n`;\n\nconst PeopleNum = styled.div`\n    display: flex;\n    justify-content: center;\n    color: #000070;\n    font-size: 1.3rem;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\nconst PeopleTxt = styled.div`\n    margin: 0 1rem;\n`;\n\nconst NumController = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst PM = styled.div`\n    font-size: 2rem;\n    cursor: pointer;\n`;\n\nconst Num = styled.div`\n    border: 2px solid #000070;\n    border-radius: 2rem;\n    width: 7rem;\n    text-align: center;\n    margin: 0 0.5rem;\n    \n`;\n\n\nexport default ({ }) => {\n    const [state, setState] = useState([\n        {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: 'selection',\n            color: \"#BBBBFF\"\n        }\n    ]);\n    const name = useInput(\"\"); //폼 이름\n    const [num, setNum] = useState(1); // 폼 인원수\n    \n\n    const make=()=>{\n        const Start = moment(state[0].startDate);\n        const End = moment(state[0].endDate);\n        axios.post(\"http://localhost:8080/api/create-schedule\", {\n            scheduleName: name.value,\n            expectedMemberCnt : num,\n            hostIdToken:\"A2\",\n            startDate : Start.format(\"YYYY-MM-DD\"),\n            endDate : End.format(\"YYYY-MM-DD\"),\n          })\n          .then(function (response) {\n              if(!response.data.success)\n                alert(\"폼 생성에 실패하였습니다.\");\n                else{\n                    window.location.replace(\"/#/form/result/\"+response.data.scheduleKey)\n                }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    return (\n        <Container>\n            <Name {...name} placeholder =\"일정 이름\"></Name>\n            <PeopleNum>\n                <FontAwesomeIcon icon={faUser}/>\n                <PeopleTxt> 인원설정 </PeopleTxt>\n                <NumController>\n                    <PM onClick ={()=>{if(num ==1) alert(\"인원수는 1명 이상이어야합니다.\"); else setNum(num-1);}}> - </PM>\n                    <Num>{num}</Num>\n                    <PM onClick ={()=>{setNum(num+1)}}> + </PM>\n                </NumController>\n\n            </PeopleNum>\n\n            <DateRange\n                editableDateInputs={true}\n                onChange={item => setState([item.selection])}\n                moveRangeOnFirstSelection={false}\n                ranges={state}\n                locale={ko}\n                 months={2}\n                 direction=\"horizontal\"\n            />\n            <Buttons>\n                <Button onClick={()=>{window.location.replace(\"/\")}} content=\"취소\" backgroundColor=\"#7953D2\" marginRight=\"20px\"/>\n                <Button onClick={()=>{make()}} content=\"일정 생성하기\" backgroundColor=\"#000070\"/>\n            </Buttons>\n\n        </Container>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 0 5%;\n`;\nconst Controller = styled.div`\n    display: flex;\n    justify-content: space-around;\n    font-size: 1.5rem;\n    color: #000070;\n`;\nconst Btn = styled.div`\n    font-weight: bold;\n    cursor: pointer;\n`;\nconst Month = styled.span`\n    margin: 0 10px;\n`;\n\nconst WeekDayRow = styled.div`\n    display:flex;\n    cursor: pointer;\n`;\nconst WeekDay = styled.div`\n    width: calc(100%/7);\n    padding: 0 3px;\n    box-sizing: border-box;\n    text-align: center;\n    color: #BEBEBE;\n    line-height: 5rem;\n    font-size: 1.2rem;\n`;\n\n\nconst CalendarContainer = styled.table`\n    width:100%;\n`;\nconst Days = styled.tbody`\n    text-align: center;\n`;\nconst Week = styled.tr`\n`;\nconst DayContainer = styled.td`\n    cursor: pointer;\n    line-height: 5rem;\n    font-size: 1.2rem;\n`;\nconst Day = styled.span`\n    padding: 0 1rem;\n`;\n\n\nexport default ({ startDate, endDate, checkDays, setCheckDays }) => { \n    const start = moment(startDate);\n    const end = moment(endDate);\n\n    const cnt  = moment.duration(end.diff(start)).asDays();\n    const [loading, setLoading] = useState(true);\n    let check_tmp = [];\n\n    useEffect (()=>{\n      for(let i = 0; i<=cnt; i++){\n        const tmpDay = start.clone().add(i,'days')\n        check_tmp = [...check_tmp,{\n          localDate: tmpDay.format('YYYY-MM-DD'),\n          availability : 0,\n        }]\n      }\n      setCheckDays([...check_tmp])\n      setLoading(false);\n    },[])    \n\n\n    const [getMoment, setMoment]=useState(moment());     \n    const today = getMoment;    // today == moment()   입니다.\n    const firstWeek = today.clone().startOf('month').week();\n    const lastWeek = today.clone().endOf('month').week() === 1 ? 53 : today.clone().endOf('month').week();\n    const WeekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    const days_row = WeekDays.map((day) => (\n            <WeekDay>{day}</WeekDay>\n        )\n    );\n    const handleClick=(days)=>{\n      const tmp = checkDays;\n      const idx = days.diff(start,'days');\n      tmp[idx].availability = (tmp[idx].availability +1) %3;\n      setCheckDays([...tmp]);\n    }\n\n    const calendarArr=()=>{\n        let result = [];\n        let week = firstWeek;\n\n        for ( week; week <= lastWeek; week++) {\n          result = result.concat(\n            <Week key={week}>\n                {\n              Array(7).fill(0).map((data, index) => {\n                let days = today.clone().startOf('year').week(week).startOf('week').add(index, 'day');\n                    // case 1. 이번달이 아닌경우\n                  if(days.format('MM') !== today.format('MM')){\n                    return(\n                        <DayContainer key={index}/>\n                    );\n                  }\n                  // case 2. 범위\n                  else if (days.isBetween(start,end) || days.isSame(start) || days.isSame(end)){\n                    return(\n                      <DayContainer key={index} onClick={()=>{handleClick(days)}}>\n                        {checkDays[days.diff(start,'days')].availability %3 === 0 &&\n                        <Day style={{ borderBottom: '4px solid #008000' }}>{days.format('D')}</Day>\n                        }\n                        {checkDays[days.diff(start,'days')].availability %3 === 1 &&\n                        <Day style={{ borderBottom: '4px solid #EA2027' }}>{days.format('D')}</Day>\n                        }\n                         {checkDays[days.diff(start,'days')].availability %3 === 2 &&\n                        <Day style={{ borderBottom: '4px solid #FFC312' }}>{days.format('D')}</Day>\n                        }\n                    </DayContainer>\n                  );\n                  }\n                  // 기본\n                  else{\n                    return(\n                        <DayContainer key={index}  >\n                          <Day style={{ color: '#E2E2E2' }}>{days.format('D')}  </Day>\n                        </DayContainer>\n                    );\n                  }\n\n              })\n            }\n            </Week>);\n        }\n        return result;\n      }\n\n    return (\n      <>\n      {loading ? (\n        <></>\n      ):(\n        <Container>\n          <Controller>\n            <Btn onClick={()=>{setMoment(getMoment.clone().subtract(1, 'month')) }}>&lt; </Btn>\n            <Month>{today.format('YYYY 년 MM 월')}</Month>  \n            <Btn onClick={()=>{ setMoment(getMoment.clone().add(1, 'month')) }}>&gt;</Btn>\n          </Controller>\n          <WeekDayRow>\n              {days_row}\n          </WeekDayRow>\n          <CalendarContainer>\n          <Days>\n              {calendarArr()}\n          </Days>\n          </CalendarContainer>\n        </Container>\n      )}\n    </>\n    );\n}","import React, { useState, useEffect } from 'react';\n\nimport styled from \"styled-components\";\nimport SubmitCalendar from '../Component/SubmitCalendar';\nimport Button from '../Component/Button';\nimport useInput from '../Hooks/useInput';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\nconst Container = styled.div`\n    display: flex;\n    padding: 2% 6%;\n`;\n\nconst InfoContainer = styled.div`\n   width:40%;\n   padding-top:150px;\n   display: flex;\n   flex-direction:column;\n   align-items: center;\n`;\n\nconst DayContainer = styled.div`\n    width: 60%;\n`;\nconst Title = styled.div`\n    border-bottom: 3px solid #E2E2E2;\n    text-align: center;\n    padding-bottom: 7px;\n    margin-bottom: 1.5rem;\n    font-size: 1.2rem;\n`;\n\nconst Info = styled.div`\n    width: 50%;\n    margin: 0 auto 2rem;\n    color: #000070;\n`;\nconst MyDays = styled.div`\n    text-align: center;\n    font-size: 1.2rem;\n`;\n\nconst Btns = styled.div`\n    display: flex;\n    margin-top: 14px;\n    justify-content: center;\n`;\n\nconst Test = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    margin-bottom: 4rem;\n`;\nconst Des = styled.div`\n    font-size: 1.8rem;\n`;\nconst TestDay = styled.div`\n    width: 6rem;\n    padding: 0 3px;\n    box-sizing: border-box;\n    text-align:center;\n    cursor:pointer;\n    height: 4rem;\n    line-height: 4rem;\n    font-size: 2.5rem;\n    margin: 20px auto;\n`;\n\n\n\nfunction Submit({match}) {\n    const [loading, setLoading] = useState(true); //로딩\n\n    const [startDate, setStartDate] = useState(moment()); \n    const [endDate, setEndDate] = useState(moment());\n    const [formName, setFormName] = useState(\"\");\n    const [testClick, setTestClick] = useState(0);\n\n    const [checkDays, setCheckDays] = useState([]); // 폼 체크된것 \n\n    useEffect(()=>{\n        axios.post(\"http://localhost:8080/api/get-submit-page\",{\n            scheduleKey : match.params.id,\n            idToken :\"A2\",\n        }).then(function (response) {\n            if(!response.data.success){\n                alert(\"폼 불러오기에 실패하였습니다.\")\n            }else{\n                setStartDate(moment(response.data.startDate));\n                setEndDate(moment(response.data.endDate));\n                setFormName(response.data.scheduleName)\n                setLoading(false);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    },[])\n\n\n    const sendCalendar = (calendar) => {\n        axios.post(\"http://localhost:8080/api/submit/member-schedule\",{\n            scheduleKey : match.params.id,\n            idToken :\"A2\",\n            dates : checkDays\n        }).then(function (response) {\n            if(!response.data.success){\n                alert(\"폼 제출에 실패하였습니다.\")\n            }else{\n                window.location.replace(\"/#/result/submit/\" + match.params.id);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    }\n\n    const abandon = () => {\n        axios.post(\"http://localhost:8080/api/abandon\",{\n            scheduleKey : match.params.id,\n            idToken :\"A2\",\n        }).then(function (response) {\n            if(!response.data.success){\n                alert(\"참여 포기에 실패하였습니다..\")\n            }else{\n                window.location.replace(\"/#/result/submit\");\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    }\n    \n    return (\n        <>\n        {loading ? (<></>): (\n            <Container>\n            <DayContainer>\n                <Info>\n                    <Title>{formName}</Title>\n                    <MyDays>{startDate.format(\"YYYY-MM-DD\")} ~ {endDate.format(\"YYYY-MM-DD\")}</MyDays>\n                    <Btns>\n                        <Button fontSize=\"0.9rem\" content=\"일정참여 포기하기\" backgroundColor=\"#7953D2\" marginRight=\"4rem\" onClick = {abandon}/>\n                        <Button fontSize=\"0.9rem\" content=\"내 일정 불러오기\" backgroundColor=\"#000070\" />\n                    </Btns>\n                </Info>\n                {!loading && <SubmitCalendar startDate = {startDate} endDate={endDate} checkDays={checkDays} setCheckDays={setCheckDays}/>}\n            </DayContainer>\n            <InfoContainer>\n                <Test>\n                    <Des>클릭해보세요</Des>\n                        {testClick === 0 && \n                        <>\n                            <TestDay onClick={() => { setTestClick((testClick + 1) % 3) }} style={{ borderBottom: '4px solid #008000' }}>1</TestDay>\n                            <Des >가능한 날</Des>\n                        </>\n                        }\n                        {testClick === 1 && \n                        <>\n                            <TestDay onClick={() => { setTestClick((testClick + 1) % 3) }} style={{ borderBottom: '4px solid #EA2027' }}>1</TestDay>\n                            <Des >불가능한 날</Des>\n                        </>\n                        }\n                        {testClick === 2 && \n                        <>\n                            <TestDay onClick={() => { setTestClick((testClick + 1) % 3) }} style={{ borderBottom: '4px solid #FFC312' }}>1</TestDay>\n                            <Des >조정 가능한 날</Des>\n                        </>\n                        }\n                </Test>\n                <Button backgroundColor=\"#000070\" content=\"제출하기\"  onClick={() => { sendCalendar(); }}></Button>\n\n            </InfoContainer>\n        </Container>\n        )}\n        </>\n        \n    );\n}\n\nexport default Submit;\n","export default __webpack_public_path__ + \"static/media/SubmitResult.7c7f5300.svg\";","import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport Button from '../Component/Button';\nimport SubmitResult from \"../Styles/Images/SubmitResult.svg\";\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 10%;\n\n`;\n\nconst Img = styled.img`\n    width: 70%;\n    margin: -20% auto;\n`;\n\nconst Btns = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: -1rem;\n`;\n\n\n\nexport default ({match}) => {\n    const title = \"멋쟁이 사자처럼 해커톤 회의\";\n    return (\n    <Container>\n        <Img src = {SubmitResult}/>\n        <Btns>\n            <Button backgroundColor=\"#7953D2\" content=\"수정하기\" marginRight=\"2.5rem\"/>\n            <Button backgroundColor=\"#000070\" content=\"결과보기\" onClick={()=>{window.location.replace(\"/#/result/\"+match.params.id)}}/>\n        </Btns>\n    </Container>\n    );\n}","export default __webpack_public_path__ + \"static/media/Clip.6bc014d2.svg\";","export default __webpack_public_path__ + \"static/media/MypageModal.3d254435.svg\";","import React, { useState, useEffect } from 'react';\nimport useInput from '../Hooks/useInput';\nimport moment from 'moment';\nimport Clip from \"../Styles/Images/Clip.svg\";\nimport MypageModal from \"../Styles/Images/MypageModal.svg\";\n\nimport styled from \"styled-components\";\n\nimport axios from 'axios';\nimport Scrollbars from 'react-custom-scrollbars';\n\n\nconst Container = styled.div`\n    text-align:center;\n    color:#000070;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Top = styled.div`\n    display: flex;\n    background-color: #E2E2FF;\n    padding: 3% 5%;\n    height: 4rem;\n`;\n\nconst ClipImg = styled.img`\n    position: absolute;\n    width: 2.5rem;\n    top: -10px;\n    left: 44px;\n`;\n\nconst Date = styled.div`\n    font-size: 1rem;\n    width: 15%;\n    background-color: white;\n    border-radius: 0.5rem;\n    margin-right: 1rem;\n    line-height: 1.3rem;\n    overflow: hidden;\n`;\nconst BluePart = styled.div`\n    background-color: #000070;\n    margin-bottom: 5px;\n`;\n\nconst AddContainer = styled.div`\n    display: flex;\n    align-items: center;\n    width: 80%;\n`;\nconst ScheduleInput = styled.input`\n    border: none;\n    border-radius: 25px;\n    padding: 5px;\n    font-size: 0.8rem;\n    width: calc(100% - 5rem);\n    font-family:'NOTO SANS CJK KR';\n    text-align: center;\n    color: #666666;\n`;\nconst Add = styled.div`\n    font-size: 1.7rem;\n    margin-left: 1rem;\n    cursor: pointer;\n    width: 4rem;\n    color: white;\n    border-radius: 1rem;\n    background-color: #000070;\n`;\n\nconst Schedules = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 5% 3%;\n`;\nconst Schedule = styled.div`\n    display: flex;\n    border-bottom: 1px solid #E2E2E2;\n    line-height: 3rem;\n    font-size: 0.9rem;\n`;\nconst ScheduleText = styled.div`\n    ::before{\n        content:'';\n        display:inline-block;\n        width:6px;\n        height:6px;\n        margin:-5px 5px 0 0;\n        vertical-align:middle;\n        background: #000070;\n        border-radius:100%\n    }\n`;\nconst Delete = styled.div`\n    cursor: pointer;\n    color: #7953D2;\n    margin-left: 5px;\n`;\n\n\nexport default ({day})=> {\n    const scheduleText = useInput(\"\");\n    const [scheduleList,setScheduleList] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    useEffect(()=>{\n        GetSchedule();\n    },[])\n\n    const GetSchedule  = () =>{\n        axios.post(\"http://localhost:8080/api/get-my-page-modal\",{\n            idToken : \"A2\",\n            localDate : day.format(\"YYYY-MM-DD\"),\n      }).then(function (response) {\n        if(!response.data.success){\n            setLoading(false);\n            alert(\"일정 불러오기에 실패하였습니다.\")\n        }else{\n            setScheduleList(response.data.myScheduleList);\n            setLoading(true);\n        }\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n\n    const Make=()=>{\n        axios.post(\"http://localhost:8080/api/add-my-schedule\", {\n            idToken:\"A2\",\n            localDate : day.format(\"YYYY-MM-DD\"),\n            scheduleName : scheduleText.value\n          })\n          .then(function (response) {\n              if(!response.data.success)\n                alert(\"일정 생성에 실패하였습니다.\");\n                else{\n                    scheduleText.setValue(\"\");\n                    GetSchedule();\n                }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    const DeleteSchedule =(id)=>{\n        axios.post(\"http://localhost:8080/api/delete-my-schedule\", {\n            idToken:\"A2\",\n            scheduleKey : id\n          })\n          .then(function (response) {\n              if(!response.data.success)\n                alert(\"일정 삭제에 실패하였습니다.\");\n                else{\n                    GetSchedule();\n                }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    return (\n        <Container>\n            <Top>\n                <ClipImg src = {Clip}/>\n                <Date>\n                    <BluePart>.</BluePart>\n                    {day.format(\"D\")}일\n                </Date>\n                <AddContainer>\n                    <ScheduleInput {...scheduleText} placeholder=\"일정을 추가하세요.\"/>\n                    <Add onClick = {()=>Make()}>+</Add>\n                </AddContainer>\n            </Top>\n            <Scrollbars style ={{height: \"30rem\"}}>\n                <Schedules>\n                    {scheduleList.map((schedule, key)=>{\n                        const id = schedule.myScheduleID;\n                            return (\n                                <Schedule key = {key}>\n                                    <ScheduleText>{schedule.myScheduleName}</ScheduleText>\n                                    <Delete onClick = {()=>{DeleteSchedule(id);}}>&times;</Delete>\n                                </Schedule>\n                            )\n                        }\n                    )}                   \n                </Schedules>\n            </Scrollbars>\n        </Container>\n        )\n}","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport MypageSchedule from '../Routes/MypageSchedule';\n\n\nconst Container = styled.div`\n    width: 70%;\n    margin: 2rem auto;\n    background-color: white;\n    border-radius: 1rem;\n    padding: 2%;\n`;\nconst Controller = styled.div`\n    display: flex;\n    justify-content: space-around;\n    font-size: 1.5rem;\n    color: #000070;\n`;\nconst Btn = styled.div`\n    font-weight: bold;\n    cursor: pointer;\n`;\nconst Month = styled.span`\n    margin: 0 10px;\n`;\n\nconst WeekDayRow = styled.div`\n    display:flex;\n    cursor: pointer;\n`;\nconst WeekDay = styled.div`\n    width: calc(100%/7);\n    padding: 0 3px;\n    box-sizing: border-box;\n    text-align: center;\n    color: #BEBEBE;\n    line-height: 5rem;\n    font-size: 1.2rem;\n`;\n\n\nconst CalendarContainer = styled.table`\n    width:100%;\n`;\nconst Days = styled.tbody`\n    text-align: center;\n`;\nconst Week = styled.tr`\n`;\nconst DayContainer = styled.td`\n    cursor: pointer;\n    line-height: 5rem;\n    font-size: 1.2rem;\n    border-radius:1rem;\n    :hover{\n      background-color:#F3F3FF;\n    }\n`;\nconst Day = styled.span`\n`;\nconst Point = styled.div`\n    position: relative;\n    top: -19px;\n    left: 48%;\n    width: 6px;\n    height: 6px;\n    border-radius: 100%;\n    background-color: #7953D2;\n`;\n\nconst contentStyle = {\n  width: \"30%\",\n  height: \"36rem\",\n  padding: \"0px\",\n  backgroundColor: \"#F3F3FF\"\n};\n\nconst X = styled.div`\n    cursor: pointer;\n    position: absolute;\n    right: -1.6rem;\n    top: -1.2rem;\n    font-size: 1.7em;\n    color: #e5eaee;\n    width: 3rem;\n    height: 3rem;\n    line-height: 3rem;\n    border-radius: 100%;\n    background-color: #7953D2;\n`;\n\nexport default ({dates}) => { \n    const [getMoment, setMoment]=useState(moment());     \n    const [checkDay, setCheckDay]=useState(moment());     \n    const today = getMoment;    // today == moment()   입니다.\n    const firstWeek = today.clone().startOf('month').week();\n    const lastWeek = today.clone().endOf('month').week() === 1 ? 53 : today.clone().endOf('month').week();\n    const WeekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    const [loading, setLoading] = useState(false);\n\n    const days_row = WeekDays.map((day) => (\n            <WeekDay>{day}</WeekDay>\n        )\n    );\n    const calendarArr=()=>{\n        let result = [];\n        let week = firstWeek;\n\n        for ( week; week <= lastWeek; week++) {\n          result = result.concat(\n            <Week key={week}>\n                {\n              Array(7).fill(0).map((data, index) => {\n                let days = today.clone().startOf('year').week(week).startOf('week').add(index, 'day');\n\n                \n                    // case 1. 이번달이 아닌경우\n                  if(days.format('MM') !== today.format('MM')){\n                    return(\n                        <DayContainer key={index}/>\n                    );\n                  }\n                  // case 2. 클릭된거\n                  else if (checkDay.format('YYYYMMDD') === days.format('YYYYMMDD')){\n                    return(\n                      <Popup\n                            trigger={\n                              <DayContainer key={index} style={{backgroundColor:\"#BBBBFF\", color:\"white\"}} >\n                                <Day >{days.format('D')}\n                                </Day>\n                                {dates.includes(days.format('YYYY-MM-DD')) && <Point/>}\n                              </DayContainer>\n                            }\n                            modal\n                            contentStyle={contentStyle}\n                            lockScroll={true}>\n                            {close => (\n                                <>\n                                    <X onClick={close}>&times; </X>\n                                    <MypageSchedule day = {days}/>\n                                </>\n                            )}\n\n                        </Popup>\n                  );\n                  }\n                  // 기본\n                  else{\n                    return(\n                        <DayContainer key={index} onClick ={()=>{setCheckDay(days)}} >\n                          <Day >{days.format('D')}\n                          </Day>\n                          {dates.includes(days.format('YYYY-MM-DD')) && <Point/>}\n\n                        </DayContainer>\n                    );\n                  }\n\n              })\n            }\n            </Week>);\n        }\n        return result;\n      }\n\n\n    return (\n      <>\n      {loading ? (\n        <></>\n      ):(\n        <Container>\n          <Controller>\n            <Btn onClick={()=>{ setMoment(getMoment.clone().subtract(1, 'month')) }}>&lt; </Btn>\n            <Month>{today.format('YYYY 년 MM 월')}</Month>  \n            <Btn onClick={()=>{ setMoment(getMoment.clone().add(1, 'month')) }}>&gt;</Btn>\n          </Controller>\n          <WeekDayRow>\n              {days_row}\n          </WeekDayRow>\n          <CalendarContainer>\n          <Days>\n              {calendarArr()}\n          </Days>\n          </CalendarContainer>\n        </Container>\n      )}\n    </>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport MypageCalendar from '../Component/MypageCalendar';\n\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst Container = styled.div`\n   display: flex;\n   padding: 3% 13%;\n   flex-direction: column;\n   align-items: center;\n`;\n\n// 상단\nconst Top = styled.div`\n    color: #000070;\n    font-size: 1.5rem;\n    border-bottom: 2px solid #707070;\n    margin-bottom: 3rem;\n    padding-bottom: 0.3rem;\n    width: 30%;\n    text-align: center;\n`;\n\n// 중간\nconst Center = styled.div`\n    width: 80%;\n    text-align:center;\n    background-color: #F3F3FF;\n    border-radius: 1rem;\n`;\nconst CalendarTop = styled.div`\n    background-color: #000070;\n    color: white;\n    line-height: 2.5rem;\n    font-size: 1.2rem;\n    border-radius: 1rem;\n`;\n\n// 아래\nconst Bottom = styled.div`\n    display: flex;\n    width: 75%;\n    margin-top:4rem;\n`;\n\n\nconst Forms = styled.div`\n    background-color: #000070;\n    color: white;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 4.5rem;\n    border-radius: 8px;\n`;\n\nconst Info = styled.div`\n    background-color: white;\n    color: #000070;\n    text-align: center;\n    margin-bottom: 1rem;\n    width: 25%;\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n    padding-bottom: 8px;\n`;\nconst Flist = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-evenly;\n`;\n\nconst LeftBtn = styled.div`\n    background-color: white;\n    width: 2rem;\n    height: 2rem;\n    border-radius: 100%;\n    text-align: center;\n    line-height: 2rem;\n    margin: 1.2rem -1rem;\n    position: absolute;\n    color: #000070;\n    font-weight: bold;\n    font-size: 1.3rem;\n    cursor: pointer;\n`;\nconst RightBtn = styled.div`\n    width: 2rem;\n    height: 2rem;\n    background-color: white;\n    margin: 1.2rem -1rem;\n    position: inherit;\n    border-radius: 100%;\n    text-align: center;\n    line-height: 2rem;\n    color: #000070;\n    font-weight: bold;\n    font-size: 1.3rem;\n    cursor: pointer;\n`;\n\nconst Form = styled.div`\n    font-size: 0.9rem;\n    margin-bottom: 5px;\n`;\nconst Line = styled.div`\n    height: 1px;\n    background-color: white;\n    width: 70%;\n    margin: 0 auto;\n`;\n\n\n\n\nfunction MyPage() {\n    const [name, setName] = useState(\"\");\n    const [dates, setDates] = useState([]); // 일정 있는 날들\n    const [myForms, setMyForms] = useState([]);\n    const [myidx, setMyidx] = useState(0);\n    const [loading, setLoading] = useState(true);\n    \n    useEffect(()=>{\n        axios.post(\"http://localhost:8080/api/get-my-schedule\",{\n            idToken : \"A2\",\n      }).then(function (response) {\n        if(!response.data.success){\n            alert(\"일정 불러오기에 실패하였습니다.\")\n        }else{\n            setDates(response.data.dates);\n        }\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    })\n\n\n    useEffect(()=>{        \n        axios.post(\"http://localhost:8080/api/get-my-page\",{\n            idToken :\"A2\",\n        }).then(function (response) {\n            if(!response.data.success){\n                alert(\"폼 불러오기에 실패하였습니다.\")\n            }else{\n                setMyForms(response.data.schedules);\n                setLoading(false);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    },[])\n\n\n    const left = ()=>{\n        if(myidx === 0){\n            toast(\"일정의 끝입니다.\", {autoClose: 3000});\n        }\n        else{\n            setMyidx(myidx-1);\n        }\n    }\n    const right = ()=>{\n        if(myidx ===Math.ceil(myForms.length/4)-1){\n            toast(\"일정의 끝입니다.\", {autoClose: 3000});\n        }\n        else{\n            setMyidx(myidx+ 1);\n        }\n    }            \n\n    return (\n        <Container>\n            {loading ? <></> :\n            <>\n                <Top>환영합니다, 임의진님</Top> \n\n                <Center>\n                    <CalendarTop>내캘린더</CalendarTop>\n                    <MypageCalendar dates ={dates}/> \n                </Center>\n\n                <Bottom>\n                    <LeftBtn onClick = {()=>{left();}}>&lt;</LeftBtn>\n                    <Forms>\n                            <Info>최근 생성한 일정</Info>\n                            <Flist>\n                                {myForms.slice(myidx*4, (myidx+1)*4).map((myform, key)=>{\n                                    const url = \"/result/\" + myform.scheduleKey;\n                                        return (\n                                            <Link to ={url} key = {key}>\n                                                <Form>{myform.scheduleName}</Form>\n                                                <Line/>\n                                            </Link>\n                                        )\n                                    }\n                                )}                           \n                            </Flist>\n                    </Forms>\n                    <RightBtn onClick = {()=>{right();}}>&gt;</RightBtn>\n\n                </Bottom>\n            </>\n            }\n\n        </Container>\n    )\n};\n\nexport default MyPage;","export default __webpack_public_path__ + \"static/media/FormResult.cfdcdcdb.svg\";","import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport Button from '../Component/Button';\nimport FormResult from \"../Styles/Images/FormResult.svg\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard'; // 클립보드 복붙용\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 10%;\n\n`;\n\nconst Img = styled.img`\n    width: 70%;\n    margin: -20% auto;\n`;\n\nconst Btns = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: -2rem;\n`;\n\n\n\nexport default ({match}) => {\n    const title = \"멋쟁이 사자처럼 해커톤 회의\";\n\n    const url = 'http://localhost:3000/#/submit/'+match.params.id; //submit url mapping\n    const [copy, setCopy] = useState(false);\n\n    return (\n    <Container>\n        <Img src = {FormResult}/>\n        <Btns>\n            <input text={url} style={{display: \"none\"}}/>\n            <CopyToClipboard text={url} onCopy={() => setCopy(true)}>\n                <Button backgroundColor=\"#000070\" content=\"링크 복사하기\" marginRight=\"2.5rem\"/>\n            </CopyToClipboard>\n            <Button backgroundColor=\"#7953D2\" content=\"메인화면\" onClick={()=>{window.location.replace(\"/\")}}/>\n        </Btns>\n    </Container>\n    );\n}","export default __webpack_public_path__ + \"static/media/Auth.4fea05af.svg\";","export default __webpack_public_path__ + \"static/media/kakao.bc91091c.svg\";","import React, {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport { GoogleLogin } from 'react-google-login';\nimport KaKaoLogin from 'react-kakao-login';\nimport axios from 'axios';\n\nimport Auth from \"../Styles/Images/Auth.svg\";\nimport kakao from \"../Styles/Images/kakao.svg\";\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 3% 10%;\n`;\n\nconst Top = styled.div`\n  text-align: center;\n  font-size: 2rem;\n  color: #000070;\n  margin-bottom: 1rem;\n`;\n\nconst Content = styled.div`\n  display: flex;\n`;  \n\nconst Img = styled.img`\n\n`;\n\nconst Login = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  width: 20%;\n  padding-left: 10%;\n`;\n\nconst Txt = styled.div`\n  color: #000070;\n    width: fit-content;\n    margin: 0 auto;\n    background-color: white;\n    padding-bottom: 2rem;\n    font-size: 1.2rem;\n`;\nconst Line = styled.div`\n    background-color: #000070;\n    height: 1px;\n    width: 100%;\n    position: relative;\n    top: -2.5rem;\n    z-index: -1;\n`;\n\nconst Klogo = styled.img`\n  width: 1rem;\n  margin-right: 1.5rem;\n  margin-left: 10px;\n`;\n\nconst KaKaoBtn = styled(KaKaoLogin)`\n  width: 100% !important;\n  height: 40px  !important;\n  line-height: 40px  !important;\n  text-align: left !important;\n  font-size: 14px !important;\n  font-family: 'Noto Sans CJK KR' !important;\n  border-radius: 3rem !important;\n  box-shadow: rgb(0 0 0 / 24%) 0px 2px 2px 0px, rgb(0 0 0 / 24%) 0px 0px 1px 0px;\n  margin-top: 3rem;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst GoogleBtn = styled(GoogleLogin)`\n  width: 100% !important;\n  height: 40px  !important;\n  line-height: 40px  !important;\n  font-size: 14px !important;\n  font-family: 'Noto Sans CJK KR';\n  border-radius: 3rem !important;\n  overflow: hidden;\n  &:hover {\n    opacity: 0.8 !important;\n  }\n`;\n\n\n\nexport default ({}) => {\n  const [userObj, setUserObj]=useState({})\n\n  // 구글\n  const googleLoginFunc=(res)=>{\n    if(res){\n      axios.post(\"http://localhost:8080/api/sign-up\",{\n        idToken: res.profileObj.googleId,\n        nickName : res.Ts.Me,\n      })\n      .then(function(response) {\n          console.log(response);\n          localStorage.setItem(\"login\", res.profileObj.googleId);\n          window.location.replace(\"/\");\n      })\n      .catch(function(error) {\n          console.log(error);\n      })\n    }\n  }\n\n    // 카카오\n    const kakaoLoginFunc=(res)=>{\n      console.log(res);\n      if(res){\n        axios.post(\"http://localhost:8080/api/sign-up\",{\n          idToken: res.profile.id,\n          nickName : \"test\",\n        })\n        .then(function(response) {\n            console.log(response);\n            localStorage.setItem(\"login\", res.profile.id);\n            window.location.replace(\"/\");\n        })\n        .catch(function(error) {\n            console.log(error);\n        })\n      }\n    }\n\n    return (\n        <Container>\n          <Top>환영합니다</Top>\n\n          <Content>\n            <Img src = {Auth}/>\n            <Login>\n              <Txt>간편로그인</Txt>\n              <Line/>\n              <GoogleBtn \n                    clientId={\"187020779465-9ie61b7h5kkniltgsjgs7nsq75g56f20.apps.googleusercontent.com\"}\n                    onSuccess={result=>googleLoginFunc(result)}\n                    onFailure={result => console.log(result)}\n                    cookiePolicy={'single_host_origin'}\n                    buttonText = \"Continue with Google\"\n                />\n                <KaKaoBtn\n                      token={'cb21585076043446225f15568416bac0'}\n                      onSuccess={response=>kakaoLoginFunc(response)}\n                      getProfile={true}\n                ><Klogo src = {kakao}/> Continue with Kakao</KaKaoBtn>\n            </Login>\n            </Content>\n        </Container>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/resultPreview.32e26c44.svg\";","import React, { useState, useEffect } from 'react';\nimport useInput from '../Hooks/useInput';\nimport moment from 'moment';\nimport Clip from \"../Styles/Images/Clip.svg\";\nimport MypageModal from \"../Styles/Images/MypageModal.svg\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styled from \"styled-components\";\n\nimport axios from 'axios';\nimport { toast } from \"react-toastify\";\nimport Scrollbars from 'react-custom-scrollbars';\n\n\n\nconst Container = styled.div`\n    text-align:center;\n    color:#000070;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Top = styled.div`\n    display: flex;\n    background-color: #E2E2FF;\n    padding: 3% 5%;\n    height: 4.5rem;\n`;\n\nconst ClipImg = styled.img`\n    position: absolute;\n    width: 2.5rem;\n    top: -10px;\n    left: 44px;\n`;\n\nconst Date = styled.div`\n    font-size: 1rem;\n    width: 15%;\n    background-color: white;\n    border-radius: 0.5rem;\n    margin-right: 1rem;\n    line-height: 1.3rem;\n    overflow: hidden;\n`;\nconst BluePart = styled.div`\n    background-color: #000070;\n    margin-bottom: 5px;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    align-items: center;\n    width: 80%;\n    justify-content: center;\n    width: 80%;\n    flex-direction: column;\n`;\nconst Title = styled.div`\n    font-size: 1.2rem;\n    width: 90%;\n    border-bottom: 2px solid white;\n    padding-bottom: 5px;\n    margin-bottom: 6px;\n`;\nconst DateRange = styled.div`\n    font-size: 0.8rem;\n`;\n\nconst Schedules = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 4%;\n`;\nconst All = styled.div`\n    display: flex;\n    padding: 18px 0;\n    border-bottom: 2px solid #E2E2E2;\n`;\nconst Possible = styled.div`\n    display: flex;\n    padding: 18px 0;\n    border-bottom: 2px solid #E2E2E2;\n    color:#009432;\n`;\nconst Adjust = styled.div`\n    display: flex;\n    padding: 18px 0;\n    border-bottom: 2px solid #E2E2E2;\n    color: #FFC312;\n`;\nconst Impossible = styled.div`\n    display: flex;\n    padding: 18px 0;\n    border-bottom: 2px solid #E2E2E2;\n    color: #EA2027;\n`;\n\nconst Left = styled.div`\n    flex: 1.5;\n    text-align: left;\n    display: flex;\n    align-items: center;\n`;\nconst Txt = styled.div`\n    margin-left: 10px;\n`;\nconst Allpeople = styled.div`\n    flex: 3;\n    background-color: #000070;\n    border-radius: 1rem;\n    color: white;\n`;\nconst Right = styled.div`\n    flex: 3;\n    display: flex;\n    flex-wrap:wrap;\n`;\nconst Node = styled.div`\n    color: white;\n    background-color: #E2E2E2;\n    padding: 7px 15px;\n    border-radius: 1rem;\n    font-size: 0.8rem;\n    margin-right: 7px;\n    margin-bottom: 7px;\n`;\nconst L = styled.div`\n    cursor: pointer;\n    position: absolute;\n    right: -10rem;\n    top: 37%;\n    font-size: 2.7em;\n    color: #e5eaee;\n    width: 3rem;\n    height: 3rem;\n    line-height: 3rem;\n    border-radius: 100%;\n`;\n\nconst R = styled.div`\n    cursor: pointer;\n    position: absolute;\n    left: -10rem;\n    top: 37%;\n    font-size: 2.7em;\n    color: #e5eaee;\n    width: 3rem;\n    height: 3rem;\n    line-height: 3rem;\n    border-radius: 100%;\n`;\n\n\nexport default ({scheduleKey, date, submitStatus, startDate, endDate, formName})=> {\n    const [availability,setAvailability] = useState([]);\n    const [loading,setLoading] = useState(false);\n    useEffect (()=>{\n        axios.post(\"http://localhost:8080/api/get-result-page-modal\",{\n          scheduleKey : scheduleKey,\n          date : date.format(\"YYYY-MM-DD\"),\n      }).then(function (response) {\n        if(!response.data.success){\n            alert(\"폼 불러오기에 실패하였습니다.\")\n        }else{\n            setAvailability(response.data.availability)\n            setLoading(false);\n        }\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n      }) \n\n    return (\n        <Container>\n                <L onClick = {()=>{(!date.isSame(endDate)) ? date.add(1,'days'): toast(\"마지막 날짜입니다.\", {autoClose: 3000}) }}>&gt; </L>\n                 <R onClick = {()=>{ (!date.isSame(startDate)) ? date.subtract(1,'days'):toast(\"시작 날짜입니다.\", {autoClose: 3000}) }}>&lt; </R>\n            <Top>\n                <ClipImg src = {Clip}/>\n                <Date>\n                    <BluePart>.</BluePart>\n                    {date.format(\"D\")}일\n                </Date>\n                <Info>\n                    <Title>{formName}</Title>\n                    <DateRange>{startDate.format(\"YYYY-MM-DD\")} ~ {endDate.format(\"YYYY-MM-DD\")} </DateRange>\n                </Info>\n            </Top>\n            <Schedules>\n                <Scrollbars style ={{height :\"19rem\"}}>\n                    <All>\n                        <Left>\n                            <FontAwesomeIcon icon = {faUser} style= {{fontSize: \"1.4rem\"}}/>\n                            <Txt>제출 인원</Txt>\n                        </Left>\n                        <Allpeople>{submitStatus}</Allpeople>\n                    </All>     \n                    <Possible>\n                        <Left>\n                            <FontAwesomeIcon icon = {faUser} style= {{fontSize: \"1.4rem\"}}/>\n                            <Txt>가능한 인원</Txt>\n                        </Left>\n                        <Right>\n                            {availability.map((avail, key)=>{\n                                        return (\n                                            <>\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            {avail.availabilityToLong == 0 ? <Node style ={{backgroundColor:\"#009432\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            </>\n                                        )\n                                    }\n                                )}   \n                        </Right>\n                    </Possible>      \n                    <Adjust>\n                        <Left>\n                            <FontAwesomeIcon icon = {faUser} style= {{fontSize: \"1.4rem\"}}/>\n                            <Txt>조정 가능한 인원</Txt>\n                        </Left>\n                        <Right>\n                            {availability.map((avail, key)=>{\n                                        return (\n                                            <>\n                                            {avail.availabilityToLong == 2 ? <Node style ={{backgroundColor:\"#FFC312\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            </>\n                                        )\n                                    }\n                                )}   \n                        </Right>\n                    </Adjust>   \n                    <Impossible>\n                        <Left>\n                            <FontAwesomeIcon icon = {faUser} style= {{fontSize: \"1.4rem\"}}/>\n                            <Txt>불가능한 인원</Txt>\n                        </Left>\n                        <Right>\n                            {availability.map((avail, key)=>{\n                                        return (\n                                            <>\n                                            {avail.availabilityToLong == 1 ? <Node style ={{backgroundColor:\"#EA2027\"}}>{avail.nickName}</Node> : <Node>{avail.nickName}</Node> }\n                                            </>\n                                        )\n                                    }\n                                )}   \n                        </Right>\n                    </Impossible>\n                </Scrollbars>\n            </Schedules>\n        </Container>\n        )\n}","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport styled from \"styled-components\";\n\nimport Popup from \"reactjs-popup\";\nimport ResultPopup from '../Routes/ResultPopup';\n\nconst Container = styled.div`\n  padding: 0 5%;\n`;\nconst Controller = styled.div`\n    display: flex;\n    justify-content: space-around;\n    font-size: 1.5rem;\n    color: #000070;\n`;\nconst Btn = styled.div`\n    font-weight: bold;\n    cursor: pointer;\n`;\nconst Month = styled.span`\n    margin: 0 10px;\n`;\n\nconst WeekDayRow = styled.div`\n    display:flex;\n    cursor: pointer;\n`;\nconst WeekDay = styled.div`\n    width: calc(100%/7);\n    padding: 0 3px;\n    box-sizing: border-box;\n    text-align: center;\n    color: #BEBEBE;\n    line-height: 5rem;\n    font-size: 1.2rem;\n`;\n\n\nconst CalendarContainer = styled.table`\n    width:100%;\n`;\nconst Days = styled.tbody`\n    text-align: center;\n`;\nconst Week = styled.tr`\n`;\nconst DayContainer = styled.td`\n    cursor: pointer;\n    line-height: 5rem;\n    font-size: 1.2rem;\n    border-radius: 1rem;\n    :hover{\n      background-color: #F6F6F6;\n    }\n`;\nconst Day = styled.span`\n    padding: 0 1rem;\n`;\n\nconst Num = styled.div`\nposition: relative;\n    top: -28px;\n    font-size: 0.9rem;\n    text-align: center;\n    left: 40.5%;\n    width: 0;\n    height: 0;\n    color: #009432;\n`;\n\nconst contentStyle = {\n  width: \"30%\",\n  height: \"27rem\",\n  padding: \"0px\",\n  backgroundColor: \"#F3F3FF\"\n};\n\nconst X = styled.div`\n    cursor: pointer;\n    position: absolute;\n    right: -1.6rem;\n    top: -1.2rem;\n    font-size: 1.7em;\n    color: #e5eaee;\n    width: 3rem;\n    height: 3rem;\n    line-height: 3rem;\n    border-radius: 100%;\n    background-color: #7953D2;\n`;\n\n\n\nexport default ({ submitStatus, scheduleKey, startDate, endDate, checkDays, formName}) => { \n  const start = moment(startDate);\n  const end = moment(endDate);\n\n    const [getMoment, setMoment]=useState(moment());     \n    const today = getMoment;    // today == moment()   입니다.\n    const firstWeek = today.clone().startOf('month').week();\n    const lastWeek = today.clone().endOf('month').week() === 1 ? 53 : today.clone().endOf('month').week();\n    const WeekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    const days_row = WeekDays.map((day) => (\n            <WeekDay>{day}</WeekDay>\n        )\n    );\n    const calendarArr=()=>{\n        let result = [];\n        let week = firstWeek;\n\n        for ( week; week <= lastWeek; week++) {\n          result = result.concat(\n            <Week key={week}>\n                {\n              Array(7).fill(0).map((data, index) => {\n                let days = today.clone().startOf('year').week(week).startOf('week').add(index, 'day');\n                    // case 1. 이번달이 아닌경우\n                  if(days.format('MM') !== today.format('MM')){\n                    return(\n                        <DayContainer key={index}/>\n                    );\n                  }\n                  \n                  // case 2. 범위\n                  else if (days.isBetween(start,end) || days.isSame(start) || days.isSame(end)){\n                    const adj = checkDays[days.format(\"YYYY-MM-DD\")].possibleCnt +  \"/\" +  (checkDays[days.format(\"YYYY-MM-DD\")].possibleCnt + checkDays[days.format(\"YYYY-MM-DD\")].adjustableCnt);\n                    return(\n                      <Popup\n                            trigger={\n                                <DayContainer key={index} >\n                                {checkDays[days.format(\"YYYY-MM-DD\")].availability === 0 &&\n                                <Day style={{ borderBottom: '4px solid #008000' }}>{days.format('D')}</Day>\n                                }\n                                {checkDays[days.format(\"YYYY-MM-DD\")].availability  === 1 &&\n                                <Day style={{ borderBottom: '4px solid #EA2027' }}>{days.format('D')}</Day>\n                                }\n                                {checkDays[days.format(\"YYYY-MM-DD\")].availability === 2 &&\n                                <>\n                                <Num>{adj}</Num>\n                                  <Day value =\"123\" style={{ borderBottom: '4px solid #FFC312' }}>{days.format('D')}</Day>\n                                </>\n                                }\n                            </DayContainer>\n                            }\n                            modal\n                            contentStyle={contentStyle}\n                            lockScroll={true}>\n                            {close => (\n                                <>\n                                    <X onClick={close}>&times; </X>\n                                    <ResultPopup formName={formName} submitStatus={submitStatus} scheduleKey= {scheduleKey} date = {days} startDate ={startDate} endDate = {endDate}/>\n                                </>\n                            )}\n\n                        </Popup>\n\n\n\n                  );\n                  }\n                  // 기본\n                  else{\n                    return(\n                        <DayContainer key={index}  >\n                          <Day style={{ color: '#E2E2E2' }}>{days.format('D')}  </Day>\n                        </DayContainer>\n                    );\n                  }\n\n              })\n            }\n            </Week>);\n        }\n        return result;\n      }\n\n    return (\n        <Container>\n          <Controller>\n            <Btn onClick={()=>{setMoment(getMoment.clone().subtract(1, 'month')) }}>&lt; </Btn>\n            <Month>{today.format('YYYY 년 MM 월')}</Month>  \n            <Btn onClick={()=>{ setMoment(getMoment.clone().add(1, 'month')) }}>&gt;</Btn>\n          </Controller>\n          <WeekDayRow>\n              {days_row}\n          </WeekDayRow>\n          <CalendarContainer>\n          <Days>\n              {calendarArr()}\n          </Days>\n          </CalendarContainer>\n        </Container>\n    );\n}","import React, { useState, useEffect } from 'react';\n\nimport styled from \"styled-components\";\nimport Button from '../Component/Button';\nimport resultPreview from \"../Styles/Images/resultPreview.svg\";\nimport ResultCalendar from '../Component/ResultCalendar';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard'; // 클립보드 복붙용\n\n\nconst Container = styled.div`\n    display: flex;\n    padding: 5%;\n`;\n\n// 왼쪽\nconst Left = styled.div`\n    width: 20%;\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    text-align: center;\n`;\nconst PeopleContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: #000070;\n`;\nconst PeopleNum = styled.div`\n    border: 2px solid #000070;\n    border-radius: 1rem;\n    padding: 3px;\n    width: 30%;\n    text-align: center;\n    margin-top: 1rem;\n`;\nconst PeopleTxt = styled.div`\n    margin-bottom: 1rem;\n`;\nconst PeopleImg = styled.img`\n    width: 65%;\n    margin: 4rem auto 0;\n`;\n\n\n// 가운데\nconst DayContainer = styled.div`\n    width: 60%;\n`;\nconst Title = styled.div`\n    border-bottom: 3px solid #E2E2E2;\n    text-align: center;\n    padding-bottom: 7px;\n    margin-bottom: 1.5rem;\n    font-size: 1.2rem;\n`;\nconst Info = styled.div`\n    width: 50%;\n    margin: 0 auto 2rem;\n    color: #000070;\n`;\nconst MyDays = styled.div`\n    text-align: center;\n    font-size: 1.2rem;\n`;\n\n// 오른쪽\nconst InfoContainer = styled.div`\n   width:20%;\n   display: flex;\n   flex-direction:column;\n   align-items: center;\n   align-self: center;\n`;\n\n\nfunction Submit({match}) {\n    const [loading, setLoading] = useState(true); //로딩\n\n    const [startDate, setStartDate] = useState(moment()); \n    const [endDate, setEndDate] = useState(moment());\n    const [formName, setFormName] = useState(\"\");\n    const [expectedMemberCnt, setExpectedMemberCnt] = useState();\n    const [joinedMemberCnt, setJoinedMemberCnt] = useState();\n    const [checkDays, setCheckDays] = useState([]); // 폼 체크된것 \n\n    const url = 'http://localhost:3000/#/submit/'+match.params.id; //submit url mapping\n    const [copy, setCopy] = useState(false);\n\n    const getDateFormat = date => {\n        return date.format(\"YYYY-MM-DD\");\n    }\n\n    useEffect (()=>{\n        axios.post(\"http://localhost:8080/api/get-result-page\",{\n          scheduleKey : match.params.id,\n      }).then(function (response) {\n        if(!response.data.success){\n            alert(\"폼 불러오기에 실패하였습니다.\")\n        }else{\n          setStartDate(moment(response.data.startDate));\n          setEndDate(moment(response.data.endDate));\n          setFormName(response.data.scheduleName)\n          setCheckDays(response.data.dates)\n          setExpectedMemberCnt(response.data.expectedMemberCnt)\n          setJoinedMemberCnt(response.data.joinedMemberCnt)\n          setLoading(false);\n        }\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n      },[]) \n\n\n      const Del = ()=>{\n        axios.post(\"http://localhost:8080/api/delete-schedule\",{\n            hostIdToken: \"A2\",\n            scheduleKey : match.params.id,\n        }).then(function (response) {\n          if(!response.data.success){\n              alert(\"폼 삭제에 실패하였습니다.\")\n          }else{\n            window.location.replace(\"/#/myPage\");\n          }\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n      }\n    return (\n        <Container>\n            <Left>\n                <PeopleContainer>\n                    <PeopleTxt>제출인원</PeopleTxt>\n                    <FontAwesomeIcon icon={faUser} style = {{fontSize: \"4rem\"}}/>\n                    <PeopleNum> {joinedMemberCnt} / {expectedMemberCnt}</PeopleNum>\n                </PeopleContainer>\n                <PeopleImg src = {resultPreview}/>\n            </Left>\n            <DayContainer>\n                <Info>\n                    <Title>{formName}</Title>\n                    <MyDays>{getDateFormat(startDate)} ~ {getDateFormat(endDate)}</MyDays>\n                </Info>\n\n                {!loading &&\n                <ResultCalendar formName = {formName} submitStatus={joinedMemberCnt+ ' / ' +expectedMemberCnt} scheduleKey= {match.params.id} startDate={startDate} endDate={endDate} checkDays={checkDays}/> \n                }\n\n            </DayContainer>\n            <InfoContainer>\n                <input text={url} style={{display: \"none\"}}/>\n                <CopyToClipboard text={url} onCopy={() => setCopy(true)}>\n                    <Button backgroundColor=\"#000070\" content=\"링크 복사하기\" marginBottom= \"1rem\"/>\n                </CopyToClipboard>\n                <Button backgroundColor=\"#7953D2\" content=\"일정 삭제하기\" onClick={() => Del()}/>\n            </InfoContainer>\n        </Container>\n    )\n}\n\nexport default Submit;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"../Routes/Main\";\nimport Form from \"../Routes/Form\";\nimport Submit from \"../Routes/Submit\";\nimport SubmitResult from \"../Routes/SubmitResult\";\nimport MyPage from \"../Routes/MyPage\";\nimport FormResult from \"../Routes/FormResult\";\nimport Auth from \"../Routes/Auth\";\n\nimport styled from \"styled-components\";\nimport ResultPage from \"../Routes/ResultPage\";\n\nconst Wrapper = styled.div`\n    display: flex; \n    min-height: 100vh; \n    flex-direction: column;\n`;\n\nconst Contents = styled.div`\n    flex:1;\n`;\nconsole.log(localStorage.getItem(\"login\"));\n\nexport default () => (\n    <Wrapper>\n        <Router>\n            <Header />\n            <Contents>\n                <Switch>\n                    <Route exact path=\"/\" exact component={Main} />\n                    <Route exact path=\"/submit/:id\" component={Submit} />\n                    <Route exact path=\"/result/submit/:id\" component={SubmitResult} />\n                    <Route path=\"/myPage\" component={MyPage} />\n                    <Route path=\"/result/:id\" component={ResultPage} />\n                    <Route exact path=\"/form\" component={Form} />\n                    <Route exact path=\"/form/result/:id\" component={FormResult} />\n                    <Route exact path=\"/auth\" component={Auth} />\n                   \n                    <Redirect path=\"*\" to=\"/\" />\n                </Switch>\n            </Contents>\n        </Router>\n    </Wrapper>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    *{\n        padding: 0;\n        margin: 0;\n        user-select: none;\n    }\n    a{\n        text-decoration:none;\n        color: inherit;\n    }\n    body{\n        box-sizing: border-box;\n        font-family:'Noto Sans CJK KR';\n    }\n    input:focus{\n    outline:none;\n  }\n  html,body{ \n      margin:0; \n      padding:0;\n      width:100%; \n      height:100%;\n      font-family:'Noto Sans CJK KR';\n      }\n\n  \n`;\nexport default globalStyles;","import React from 'react';\nimport Router from './Component/Router';\n\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport GlobalStyles from \"./Component/GlobalStyles\";\n\n\n\nfunction App() {\n  return (\n    <>\n      <Router/>\n      <GlobalStyles/>\n      <ToastContainer position=\"bottom-right\" />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Styles/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}